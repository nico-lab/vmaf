# passlog
https://superuser.com/questions/1549360/second-pass-while-using-concat-in-ffmpeg
libx264は1パス目は品質指定ができて2パス目はビットレート指定になる。libx265、vp8、libvpx-vp9はどちらも品質指定ができる。
VBV maxrate specified, but no bufsize, ignored
log.mbtreeが作られる作られないの違いが分からない
	mbtreeが設定で有効になってないと作られない
	mbtree同じファイルなら内容は同じ
	パスログファイルは設定が異なるとファイルも異なる
		レート関係はどうなるか
			レート関係も影響する
			bufsizeかえると異なる
		設定毎に異なるので毎回パスログを作るべき
			max. min は設定が効いてないので同じ
パスログが他の設定に流用できるのかできないのかを調べる
ffmpeg -i bbb200.mkv -c:v libx264 -b:v 1800k -minrate 900k -maxrate 2610k -preset ultrafast -pass 1 -passlogfile ultrafast -an -f null -
ffmpeg -i bbb200.mkv -c:v libx264 -b:v 1800k -minrate 900k -maxrate 2610k -preset veryslow -pass 1 -passlogfile veryslow -an -f null -
	veryslow-0.log.mbtree
ffmpeg -i bbb200.mkv -c:v libx264 -crf 20 -preset ultrafast -pass 1 -passlogfile crf20 -an -f null -
ffmpeg -i bbb200.mkv -c:v libx264 -crf 40 -preset veryslow -pass 1 -passlogfile crf40 -an -f null -
	crf40-0.log.mbtree
ffmpeg -i bbb200.mkv -c:v libx264 -b:v 2800k -minrate 900k -maxrate 2610k -preset ultrafast -pass 1 -passlogfile bv28 -an -f null -
ffmpeg -i bbb200.mkv -c:v libx264 -b:v 1800k -minrate 1200k -maxrate 2610k -preset ultrafast -pass 1 -passlogfile mi12 -an -f null -
ffmpeg -i bbb200.mkv -c:v libx264 -b:v 1800k -minrate 900k -maxrate 2810k -preset ultrafast -pass 1 -passlogfile mz28 -an -f null -
ffmpeg -i bbb200.mkv -c:v libx264 -b:v 2800k -minrate 900k -maxrate 2610k -preset ultrafast -pass 2 -passlogfile bv28 -an foo.mp4

ffmpeg -i bbb200.mkv -c:v libx264 -b:v 2800k -minrate 900k -maxrate 2610k -bufsize 5000k -preset ultrafast -pass 1 -passlogfile bv28buf -an -f null -
max bitrate less than average bitrate, assuming CBR
ffmpeg -i bbb200.mkv -c:v libx264 -b:v 2000k -minrate 900k -maxrate 2610k -bufsize 5000k -preset ultrafast -pass 1 -passlogfile bv28buf -an -f null -
これでエラーがなくなる
ffmpeg -i bbb200.mkv -c:v libx264 -b:v 2000k -minrate 900k -maxrate 2610k -bufsize 4000k -preset ultrafast -pass 1 -passlogfile bv28buf4 -an -f null -


目標ビットレート
https://www.dacast.com/blog/best-h-264-encoder-settings-for-live-streaming/
426x240		350
640x360		350 – 800
854x480		800 – 1200
1280x720		1200 – 1900
1920x1080	1900 – 4500

https://www.wowza.com/docs/how-to-optimize-the-video-bitrate
data rate / (resolution * frames per second) = BPP
	指数近似	0.032
	対数近似	0.04
	累乗近似	0.058
(resolution * frames per second * BPP) / 1000 = bitrate
284 * 160 * 25 * 0.150 / 1000 = 170 kbps
426 * 240 * 25 * 0.133 / 1000 = 340 kbps
480 * 360 * 25 * 0.125 / 1000 = 540 kbps
854 * 480 * 25 * 0.100 / 1000 = 1024 kbps
1280 * 720 * 25 * 0.080 / 1000 = 1843 kbps
1920 * 1080 * 25 * 0.075 / 1000 = 3888 kbps


https://bitmovin.com/docs/encoding/tutorials/h264-presets
オプション設定

https://streaminglearningcenter.com/wp-content/uploads/2018/05/Encoding-for-HEVC-SME-2018-Jan.pdf
P51
416 x 234	145
640 x 360	365
768 x 432	730
768 x 432	1100
960 x 540	2000
1280 x 720	3000
1280 x 720	4500
1920 x 1080	6000
1920 x 1080	7800




https://trac.ffmpeg.org/wiki/Encode/H.264
https://stackoverflow.com/questions/40668616/whats-the-difference-with-crf-and-qp-in-ffmpeg
	http://slhck.info/articles/crf

https://en.wikibooks.org/wiki/MeGUI/x264_Settings
https://www.wikihouse.com/netvista/index.php?%BA%C7%BF%B7ffmpeg%2F%B9%E2%C5%D9%A4%CA%A5%AA%A5%D7%A5%B7%A5%E7%A5%F3

http://ageha909.blog121.fc2.com/?cat=50&page=0
http://nicowiki.com/%E6%8B%A1%E5%BC%B5%20x264%20%E5%87%BA%E5%8A%9B%EF%BC%88GUI%EF%BC%89Ex%E3%81%AE%E8%A8%AD%E5%AE%9A%E9%A0%85%E7%9B%AE%E3%81%A8%E3%81%9D%E3%81%AE%E6%A9%9F%E8%83%BD%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6.html
https://note.com/til_deuccha/n/nbe4cde5ea922

Revisiting rc-lookahead, opencl and lookahead-threads - Doom9's Forum https://forum.doom9.org/showthread.php?p=1933157#post1933157


https://rigaya34589.blog.fc2.com/blog-category-1.html
rigayaの日記兼メモ帳 x264 エンコード実験 --weightp 2 https://rigaya34589.blog.fc2.com/blog-entry-39.html
重み付け予測ということはとりあえず、フェードとかに強くなるらしいよ？ まず、フェードとか多そうな動画を探してみた。
rigayaの日記兼メモ帳 x264 エンコード実験 --bframes編 https://rigaya34589.blog.fc2.com/blog-entry-8.html
	slowerからb_adapt=2になる
rigayaの日記兼メモ帳 x264 エンコード実験 --subme編 https://rigaya34589.blog.fc2.com/blog-entry-6.html
subme 9 と 10 がなにも変わらんのは--aq-strength を 0 にしたせいかな。
なんか subme 10 って AQ を使うらしいので。
	aq=1:1.00は固定で変化ない
rigayaの日記兼メモ帳 x264の--threads 参 https://rigaya34589.blog.fc2.com/blog-entry-272.html

aq-mode:でうっちゃ！　－プリセット関連研究室－ - ブロマガ https://ch.nicovideo.jp/til/blomaga/ar857848
aq-mode => 2
AQを有効にして、ビットレート配分の差を大きめに調整するAutoVAQモード
aq-mode => 3
AQを有効にして、暗いシーンへの傾向も考慮したAutoVAQモード
	@実写は効果が大きそうな気がする
	実写向けに aq_strength=2.0
aq-strength:でうっちゃ！　－プリセット関連研究室－ - ブロマガ https://ch.nicovideo.jp/til/blomaga/ar876060
aq-mode => 0.00 ～ 3.00
AQの動作強度で、QPの差は数値が、小さいほど狭まり、大きいほど広がる
b-adapt（b_strategy）:でうっちゃ！　－プリセット関連研究室－ - ブロマガ https://ch.nicovideo.jp/til/blomaga/ar876075
b-adapt（b_strategy） => 1
設定したBフレームの最大数から使用する枚数を高速で簡易的に判定
b-adapt（b_strategy） => 2
設定したBフレームの最大数から使用する枚数を低速で正確に判定
direct（direct-pred）:でうっちゃ！　－プリセット関連研究室－ - ブロマガ https://ch.nicovideo.jp/til/blomaga/ar876929
direct（direct-pred） => auto = 3
ダイレクトマクロブロックの予測を有効にして、空間と時間を考慮して処理する
プリセット関連実験机:でうっちゃ！　－プリセット関連研究室－ - ブロマガ https://ch.nicovideo.jp/til/blomaga/ar648180
	@網羅的に説明

http://forum.doom9.org/showthread.php?p=1173827#post1173827
--scenecut -1 disables scenecut (which of course results in a static gop). 

